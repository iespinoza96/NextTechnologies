//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class NextTechnologiesEntities : DbContext
    {
        public NextTechnologiesEntities()
            : base("name=NextTechnologiesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cargo> Cargoes { get; set; }
    
        public virtual int CargoAdd(string id, string company_name, string company_id, Nullable<decimal> amount, string status, string created_at, string updated_at)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var company_nameParameter = company_name != null ?
                new ObjectParameter("company_name", company_name) :
                new ObjectParameter("company_name", typeof(string));
    
            var company_idParameter = company_id != null ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var created_atParameter = created_at != null ?
                new ObjectParameter("created_at", created_at) :
                new ObjectParameter("created_at", typeof(string));
    
            var updated_atParameter = updated_at != null ?
                new ObjectParameter("updated_at", updated_at) :
                new ObjectParameter("updated_at", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CargoAdd", idParameter, company_nameParameter, company_idParameter, amountParameter, statusParameter, created_atParameter, updated_atParameter);
        }
    
        public virtual ObjectResult<CargoGetAll_Result> CargoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CargoGetAll_Result>("CargoGetAll");
        }
    }
}
